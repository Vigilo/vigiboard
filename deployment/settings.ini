;
; vigiboard - Pylons development environment configuration
;
; The %(here)s variable will be replaced with the parent directory of this file
;
; This file is for deployment specific config options -- other configuration
; that is always required for the app is done in the config directory, 
; and generally should not be modified by end users. 

[DEFAULT]
debug = false
; Uncomment and replace with the address which should receive any error reports
;email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 0.0.0.0 
port = 80

[app:main]
use = egg:vigiboard

db_basename=vigilo_
password_hashing_function=md5
lang=fr
use_kerberos=False
help_link=http://foo.bar/help

; Nombre d'événements par page.
vigiboard_items_per_page = 15

; URL vers laquelle le logo de Vigilo redirige.
logo_link = /

; Ordre de tri pour la priorité des événements.
; - Utiliser "asc" si la priorité est inversement proportionnelle à sa
;   valeur (ie: plus le nombre est bas, plus la priorité est élevée).
; - Utiliser "desc" si la priorité est proportionnelle à sa valeur
;   (ie: plus le nombre est élevé, plus la priorité est élevée).
; NE PAS METTRE DE GUILLEMETS/APOSTROPHES AUTOUR DE LA VALEUR.
vigiboard_priority_order = asc

; Default font size, must be a valid size as per the CSS 2.1 specification.
; See http://www.w3.org/TR/CSS21/fonts.html#font-size-props
vigiboard_font.size = 10px

; Indique si le tri des événements se fait d'abord sur l'état Nagios
; puis l'horodatage de l'événement, ou bien l'inverse.
; Dans tous les cas, d'autres critères de tri interviennent avant
; (état d'acquittement et priorité ITIL).
state_first = True

full_stack = true
cache_dir = /tmp/vigilo/vigiboard/data
beaker.session.key = vigiboard
beaker.session.secret = vigilo
sa_auth.cookie_secret = vigilo

; If you'd like to fine-tune the individual locations of the cache data dirs
; for the Cache data, or the Session saves, un-comment the desired settings
; here:
;beaker.cache.data_dir = %(here)s/data/cache
;beaker.session.data_dir = %(here)s/data/sessions

; DB - sqlite fails, not postgresql ready, use mysql for now
sqlalchemy.url=postgres://vigilo:vigilo@localhost/vigilo

; echo shouldn't be used together with the logging module.
sqlalchemy.echo = false
sqlalchemy.echo_pool = false
sqlalchemy.pool_recycle = 3600

base_url_filter.base_url=
set debug = false

; Logging configuration
; Add additional loggers, handlers, formatters here
; Uses python's logging config file format
; http://docs.python.org/lib/logging-config-fileformat.html

[loggers]
keys = root, vigiboard, sqlalchemy, auth

[handlers]
keys = console,sql_log,root_log,vigiboard_log,auth_log

[formatters]
keys = generic

; If you create additional loggers, add them as a key to [loggers]
[logger_root]
level = INFO
handlers = root_log

[logger_vigiboard]
level = INFO
handlers = vigiboard_log
qualname = vigiboard

[logger_sqlalchemy]
level = INFO
handlers = sql_log
qualname = sqlalchemy.engine

; A logger for authentication, identification and authorization -- this is
; repoze.who and repoze.what:
[logger_auth]
level = INFO
handlers = auth_log
qualname = auth

; If you create additional handlers, add them as a key to [handlers]
[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_sql_log]
class = FileHandler
args = ('/var/log/vigilo/vigiboard/sql.log','a')
level = DEBUG
formatter = generic

[handler_root_log]
class = FileHandler
args = ('/var/log/vigilo/vigiboard/root.log','a')
level = DEBUG
formatter = generic

[handler_vigiboard_log]
class = FileHandler
args = ('/var/log/vigilo/vigiboard/vigiboard.log','a')
level = DEBUG
formatter = generic

[handler_auth_log]
class = FileHandler
args = ('/var/log/vigilo/vigiboard/auth.log','a')
level = DEBUG
formatter = generic

; If you create additional formatters, add them as a key to [formatters]
[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

