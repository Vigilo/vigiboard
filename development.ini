#
# vigiboard - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
# This file is for deployment specific config options -- other configuration
# that is always required for the app is done in the config directory,
# and generally should not be modified by end users.

[DEFAULT]
debug = true
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 8085

[app:main]
use = egg:vigiboard

db_basename=vigilo_
password_hashing_function=md5
lang=fr
external_auth=False
help_link=http://foo.bar/help

; Délai de rafraîchissement automatique (en secondes).
refresh_delay=30
; Indique si le rafraîchissement automatique
; est activé ou non par défaut.
refresh_enabled=True

; Nombre d'événements par page.
vigiboard_items_per_page = 15

; URL vers laquelle le logo de Vigilo redirige.
logo_link = /

; Ordre de tri pour la priorité des événements.
; - Utiliser "asc" si la priorité est inversement proportionnelle à sa
;   valeur (ie: plus le nombre est bas, plus la priorité est élevée).
; - Utiliser "desc" si la priorité est proportionnelle à sa valeur
;   (ie: plus le nombre est élevé, plus la priorité est élevée).
; NE PAS METTRE DE GUILLEMETS/APOSTROPHES AUTOUR DE LA VALEUR.
vigiboard_priority_order = asc

; Taille par défaut du texte, doit être une taille valide
; au sens de la spécification de CSS 2.1.
; Cf. http://www.w3.org/TR/CSS21/fonts.html#font-size-props
vigiboard_font.size = 10px

; Indique si le tri des événements se fait d'abord sur l'état Nagios
; puis l'horodatage de l'événement, ou bien l'inverse.
; Dans tous les cas, d'autres critères de tri interviennent avant
; (état d'acquittement et priorité ITIL).
state_first = True

; Emplacement des applications (vigirrd, Nagios, ...)
; sur les serveurs distants.
app_path.nagios = /nagios/

; Schéma ("protocol") à utiliser pour se connecter
; à l'application. En général : http ou https.
; Par défaut : http
app_scheme.nagios = http

; Port de connexion au serveur distant hébergeant
; l'application.
; Par défaut : 80
app_port.nagios = 80

; Doit être laissé à true pour obtenir une application complète.
full_stack = true

; Le nom du dossier dans lequel les fichiers de sessions
; sont conservés. "%(here)s" est remplacé par le chemin
; d'accès jusqu'au dossier contenant ce fichier.
cache_dir = %(here)s/data

; Le nom du cookie de session qui sera créé sur le navigateur
; du client.
beaker.session.key = vigiboard

; La clé secrète utilisée pour chiffrer/déchiffrer la session.
; Voir également "sa_auth.cookie_secret".
beaker.session.secret = vigilo

; La clé secret utilisée pour chiffrer/déchiffrer le cookie
; d'authentification.
; Voir également "beaker.session.secret".
sa_auth.cookie_secret = vigilo

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions

sqlalchemy.url=postgres://vigilo:vigilo@localhost/vigilo
sqlalchemy.echo = false
sqlalchemy.echo_pool = false
sqlalchemy.pool_recycle = 3600

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
#set debug = false

auth.config = %(here)s/who.ini
#auth.log_file = stdout
#auth.log_level = debug

# Logging configuration
# Add additional loggers, handlers, formatters here
# Uses python's logging config file format
# http://docs.python.org/lib/logging-config-fileformat.html

[loggers]
keys = root, vigiboard, sqlalchemy, auth

[handlers]
keys = console,sql_log,root_log,vigiboard_log,auth_log

[formatters]
keys = generic

# If you create additional loggers, add them as a key to [loggers]
[logger_root]
level = INFO
handlers = console

[logger_vigiboard]
level = INFO
handlers = vigiboard_log
qualname = vigiboard

[logger_sqlalchemy]
level = INFO
handlers = console
#sql_log
qualname = sqlalchemy.engine

# A logger for authentication, identification and authorization -- this is
# repoze.who and repoze.what:
[logger_auth]
level = WARN
handlers = auth_log
qualname = auth

# If you create additional handlers, add them as a key to [handlers]
[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_sql_log]
class = FileHandler
args = ('log/sql.log','a')
level = INFO
formatter = generic

[handler_root_log]
class = FileHandler
args = ('log/root.log','a')
level = INFO
formatter = generic

[handler_vigiboard_log]
class = FileHandler
args = ('log/vigiboard.log','a')
level = INFO
formatter = generic

[handler_auth_log]
class = FileHandler
args = ('log/auth.log','a')
level = INFO
formatter = generic

# If you create additional formatters, add them as a key to [formatters]
[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
