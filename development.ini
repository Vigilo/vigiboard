#
# vigiboard - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
# This file is for deployment specific config options -- other configuration
# that is always required for the app is done in the config directory, 
# and generally should not be modified by end users. 

[DEFAULT]
debug = true
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 127.0.0.1 
port = 8080

[app:main]
use = egg:vigiboard

; Nombre d'évènements par page.
vigiboard_item_per_page = 15

; URL vers laquelle le logo de Vigilo redirige.
vigiboard_links.logo = /

; XXX PasteDeploy uses ConfigParser which doesn't play well with interpolation.
; See http://trac.pythonpaste.org/pythonpaste/ticket/379
;
; vigicore/patches/paste_deploy_SafeConfigParser.diff contains a patch to
; use SafeConfigParser which supports string interpolation escapes.
;
; URL des tickets, possibilités:
; - %(idevent)d
; - %(host)s
; - %(service)s
; - %(tt)s
vigiboard_links.tt = http://example4.com/%%(idevent)d/%%(tt)s

; Default font size, must be a valid size as per the CSS 2.1 specification.
; See http://www.w3.org/TR/CSS21/fonts.html#font-size-props
vigiboard_font.size = 10px


full_stack = true
#lang = fr
cache_dir = %(here)s/data
beaker.session.key = vigiboard
beaker.session.secret = somesecret

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions

# DB - sqlite fails, not postgresql ready, use mysql for now
#sqlalchemy.url = sqlite:///%(here)s/devdata.db
#sqlalchemy.url=mysql://vigiboard:penmdor@localhost/vigiboard
#sqlalchemy.url=postgres://vigiboard:tandreja@localhost/vigiboard
#sqlalchemy.url=mysql://root:tandreja@localhost:3306/vigiboard
#echo shouldn't be used together with the logging module.
sqlalchemy.echo = false
sqlalchemy.echo_pool = false
sqlalchemy.pool_recycle = 3600

base_url_filter.base_url=
# if you are using Mako and want to be able to reload
# the mako template from disk during the development phase
# you should say 'true' here
# This option is only used for mako templating engine
# WARNING: if you want to deploy your application using a zipped egg
# (ie: if your application's setup.py defines zip-safe=True, then you
# MUST put "false" for the production environment because there will
# be no disk and real files to compare time with.
# On the contrary if your application defines zip-safe=False and is
# deployed in an unzipped manner, then you can leave this option to true
templating.mako.reloadfromdisk = true

# the compiled template dir is a directory that must be readable by your
# webserver. It will be used to store the resulting templates once compiled
# by the TemplateLookup system.
# During development you generally don't need this option since paste's HTTP
# server will have access to you development directories, but in production
# you'll most certainly want to have apache or nginx to write in a directory
# that does not contain any source code in any form for obvious security reasons.
#
#templating.mako.compiled_templates_dir = /some/dir/where/webserver/has/access

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
#set debug = false

# Logging configuration
# Add additional loggers, handlers, formatters here
# Uses python's logging config file format
# http://docs.python.org/lib/logging-config-fileformat.html

[loggers]
keys = root, vigiboard, sqlalchemy, auth

[handlers]
keys = console,sql_log,root_log,vigiboard_log,auth_log

[formatters]
keys = generic

# If you create additional loggers, add them as a key to [loggers]
[logger_root]
level = DEBUG
handlers = root_log

[logger_vigiboard]
level = DEBUG
handlers = vigiboard_log
qualname = vigiboard

[logger_sqlalchemy]
level = DEBUG
handlers = sql_log
qualname = sqlalchemy.engine

# A logger for authentication, identification and authorization -- this is
# repoze.who and repoze.what:
[logger_auth]
level = DEBUG
handlers = auth_log
qualname = auth

# If you create additional handlers, add them as a key to [handlers]
[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_sql_log]
class = FileHandler
args = ('log/sql.log','a')
level = DEBUG
formatter = generic

[handler_root_log]
class = FileHandler
args = ('log/root.log','a')
level = DEBUG
formatter = generic

[handler_vigiboard_log]
class = FileHandler
args = ('log/vigiboard.log','a')
level = DEBUG
formatter = generic

[handler_auth_log]
class = FileHandler
args = ('log/auth.log','a')
level = DEBUG
formatter = generic

# If you create additional formatters, add them as a key to [formatters]
[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
